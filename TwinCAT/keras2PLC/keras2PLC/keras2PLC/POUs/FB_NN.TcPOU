<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_NN" Id="{f0e7eecc-dc29-4b35-bd96-2188772aebb7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_NN
VAR_INPUT
	pointer_input: POINTER TO LREAL;
	pointer_output : POINTER TO LREAL;
	
END_VAR
VAR	
	i : UINT;
	flag_LoadWeights : BOOL := TRUE;
	load_weights : FB_LoadWeights;
	filePath : T_MaxString := 'C:\Users\MMS\Documents\Zexu\keras2plc\tests\test_ST_files\AllWeights.txt';
	ReadAdr :POINTER TO LREAL := ADR(GVL_Dense_v1.nn.weights);
	ReadLen : UDINT := SIZEOF(GVL_Dense_v1.nn.weights);
	nn : Layers := GVL_Dense_v1.nn;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF flag_LoadWeights THEN
		load_weights(execute := TRUE,filePath := filePath,ReadAdr := ReadAdr, ReadLen := ReadLen);
		IF NOT load_weights.busy THEN 
			flag_LoadWeights := FALSE;
		END_IF
ELSE
	MEMCPY(destAddr:=ADR(nn.layer_input),srcAddr:=pointer_input,n:=SIZEOF(LREAL)*nn.layers[0].num_neurons);
	FOR i := 0 TO nn.num_layers-2 DO
		F_ForwardPropagation(	layer_pre	:= 	nn.layers[i],
								layer_next	:=	nn.layers[i+1],
								pointer_in 	:=	ADR(nn.layer_input),
								pointer_out	:=	ADR(nn.layer_output)	);
		MEMCPY(destAddr:=ADR(nn.layer_input),srcAddr:=ADR(nn.layer_output),n:=SIZEOF(LREAL)*nn.layers[i+1].num_neurons);
	END_FOR
	MEMCPY(destAddr:=pointer_output,srcAddr:=ADR(nn.layer_output),n:=SIZEOF(LREAL)*nn.layers[nn.num_layers-1].num_neurons);
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FB_NN">
      <LineId Id="36" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="44" Count="7" />
      <LineId Id="43" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>